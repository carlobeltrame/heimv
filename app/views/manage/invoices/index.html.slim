= render partial: 'manage/bookings/navigation', locals: { active: :invoices }


- if @booking && @booking.invoices.none?
  p.text-center
    = t(:no_records_yet, model_name: Invoice.model_name.human(count: :other))
    =<> link_to t(:add_record, model_name: Invoice.model_name.human), new_manage_booking_invoice_path(@booking)
- else
  table.table.table-hover.table-card
    thead
      tr
        th= Invoice.model_name.human(count: :other)
        th= Invoice.human_attribute_name(:invoice_type)
        th= Invoice.human_attribute_name(:payable_until)
        th= Invoice.human_attribute_name(:amount)
        th= Invoice.human_attribute_name(:amount_paid)
        th= Invoice.human_attribute_name(:amount_open)
        th

    tbody
      - @invoices.each do |invoice|
        tr[data-href=manage_invoice_path(invoice) class=('disabled' if invoice.deleted?)]
          td
            - if invoice.pdf.attached?
              = link_to url_for(invoice.pdf), target: '_blank'
                span.fa.fa-print<>
                span= invoice.filename
          td
            = Invoice.human_enum(:invoice_types, invoice.invoice_type)

          td
            - if invoice.payable_until.past?
              .text-danger= l(invoice.payable_until, format: :date)
            - else
              =l(invoice.payable_until, format: :date)

          td
            = number_to_currency(invoice.amount)

          td
            = number_to_currency(invoice.amount_paid)

          td
            - if invoice.amount_open.negative?
              .text-warning= number_to_currency(invoice.amount_open)
            - elsif invoice.amount_open.zero?
              .text-success= number_to_currency(invoice.amount_open)
            - else
              .text-danger= number_to_currency(invoice.amount_open)

          td.py-1.text-right
            .btn-group
              - unless invoice.paid
                = link_to new_manage_booking_payment_path(invoice.booking, payment: { invoice_id: invoice.id, amount: invoice.amount }), class: 'btn btn-default'
                  = t(:add_record, model_name: Payment.model_name.human)
              = link_to edit_manage_invoice_path(invoice), class: 'btn btn-default' do
                span.fa.fa-pencil
              = link_to manage_invoice_path(invoice), data: { confirm: t(:confirm) }, method: :delete, class: 'btn btn-default' do
                span.fa.fa-trash

- if @booking
  br
  .btn-group
    button.btn.btn-primary.dropdown-toggle.dropdown-toggle-split[data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"]
      = t(:add_record, model_name: Invoice.model_name.human)
      '
    .dropdown-menu
      = link_to new_manage_booking_invoice_path(@booking, invoice: { invoice_type: :deposit }), class: 'dropdown-item' do
        = t(:add_record, model_name: :Anzahlung)
      = link_to new_manage_booking_invoice_path(@booking), class: 'dropdown-item' do
        = t(:add_record, model_name: Invoice.model_name.human)
